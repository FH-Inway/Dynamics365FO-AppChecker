<?xml version='1.0' encoding='utf-8'?>
<SettingsFile xmlns="http://schemas.microsoft.com/VisualStudio/2004/01/settings" CurrentProfile="(Default)" GeneratedClassNamespace="SocratexGraphExplorer.Properties" GeneratedClassName="Settings">
  <Profiles />
  <Settings>
    <Setting Name="Username" Type="System.String" Scope="User">
      <Value Profile="(Default)">neo4j</Value>
    </Setting>
    <Setting Name="QueryFontSize" Type="System.Int32" Scope="User">
      <Value Profile="(Default)">12</Value>
    </Setting>
    <Setting Name="QueryFont" Type="System.String" Scope="User">
      <Value Profile="(Default)">Consolas</Value>
    </Setting>
    <Setting Name="Port" Type="System.Int32" Scope="User">
      <Value Profile="(Default)">7687</Value>
    </Setting>
    <Setting Name="Server" Type="System.String" Scope="User">
      <Value Profile="(Default)">localhost</Value>
    </Setting>
    <Setting Name="AppTitle" Type="System.String" Scope="User">
      <Value Profile="(Default)">Socratex Graph Explorer</Value>
    </Setting>
    <Setting Name="ConnectResultNodes" Type="System.Boolean" Scope="User">
      <Value Profile="(Default)">False</Value>
    </Setting>
    <Setting Name="SourceFontSize" Type="System.Int32" Scope="User">
      <Value Profile="(Default)">12</Value>
    </Setting>
    <Setting Name="SourceFont" Type="System.String" Scope="User">
      <Value Profile="(Default)">Consolas</Value>
    </Setting>
    <Setting Name="TextResultsFontSize" Type="System.Int32" Scope="User">
      <Value Profile="(Default)">12</Value>
    </Setting>
    <Setting Name="ShowLineNumbers" Type="System.Boolean" Scope="User">
      <Value Profile="(Default)">True</Value>
    </Setting>
    <Setting Name="Configuration" Type="System.String" Scope="User">
      <Value Profile="(Default)">{
    "createGraphNode": (node) =&gt; {
        if (node.labels[0] == 'Class') {
            return { id: node.id, value: node.properties.WMC, label: node.properties.Name, title: node.properties.$indegree, color: "red" }
        }
        else if (node.labels[0] == 'Method') {
            return { id: node.id, value: node.properties.LOC, label: node.properties.Name, title: node.properties.$indegree, color: "green", static: node.properties.IsStatic }
        }
        else {

        }
        return { id: node.id, label: node.properties.Name };
    },

    "createGraphEdge": (edge) =&gt; {
        if (edge.type == 'CALLS') {
            return { id: edge.id, from: edge.from, to: edge.to, value: edge.properties.Count, label: edge.type, title: 'Calls: ' + edge.properties.Count, color: {color: "yellow" }};
        }
        else {
            return { id: edge.id, from: edge.from, to: edge.to, label: edge.type };
        }
    },

    "options":  {
        interaction: { hover: true, selectConnectedEdges: false },
        manipulation: {
            enabled: false, // true enables adding nodes to the graph
        },
        nodes: {
            size: 10, // For nodes that do not have specific size
            font: { strokeWidth: 2 }, // This is the amount of space around the text in nodes or edges.
            shape: 'dot',
            scaling: {
                label: { // Make sure font size is in this range.
                    min: 8, max: 40
                }
            }
        },
        edges: {
            arrows: "to",
            shadow: true,
            smooth: true,
        }
    }
}</Value>
    </Setting>
    <Setting Name="DarkMode" Type="System.Boolean" Scope="User">
      <Value Profile="(Default)">False</Value>
    </Setting>
  </Settings>
</SettingsFile>